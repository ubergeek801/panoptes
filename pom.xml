<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.slaq</groupId>
    <artifactId>panoptes</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>panoptes</name>
    <url>https://github.com/ubergeek801/panoptes</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>11</java.version>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.source>${java.version}</maven.compiler.source>

        <micronaut.version>1.2.0</micronaut.version>

        <globalJvmArgs>-XX:+UseG1GC -XX:+UseStringDeduplication -XX:MaxGCPauseMillis=5000
            --add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
            --add-opens
            java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/java.nio=ALL-UNNAMED
            --add-opens
            java.base/sun.nio.ch=ALL-UNNAMED
            --add-opens java.management/sun.management=ALL-UNNAMED
            --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED</globalJvmArgs>
    </properties>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.6.2</version>
            </extension>
        </extensions>

        <plugins>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                    <from>
                        <image>bellsoft/liberica-openjdk-alpine:12.0.2-aarch64</image>
                    </from>
                    <to>
                        <image>ubergeek801/slaqworx</image>
                    </to>
                    <container>
                        <!-- TODO figure out a way to DRY the global JVM flags -->
                        <jvmFlags>
                            <jvmFlag>-XX:+UseG1GC</jvmFlag>
                            <jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
                            <jvmFlag>-XX:MaxGCPauseMillis=5000</jvmFlag>
                            <jvmFlag>--add-modules</jvmFlag>
                            <jvmFlag>java.se</jvmFlag>
                            <jvmFlag>--add-exports</jvmFlag>
                            <jvmFlag>java.base/jdk.internal.ref=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>java.base/java.lang=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>java.base/java.nio=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>java.base/sun.nio.ch=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>java.management/sun.management=ALL-UNNAMED</jvmFlag>
                            <jvmFlag>--add-opens</jvmFlag>
                            <jvmFlag>jdk.management/com.sun.management.internal=ALL-UNNAMED</jvmFlag>

                            <jvmFlag>-Xmx2560m</jvmFlag>
                            <jvmFlag>-Dhazelcast.jmx=true</jvmFlag>
                            <jvmFlag>-noverify</jvmFlag>
                            <jvmFlag>-XX:TieredStopAtLevel=1</jvmFlag>
                            <jvmFlag>-Djava.util.concurrent.ForkJoinPool.common.parallelism=6</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.rmi.port=8000</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote=true</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.port=8000</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.ssl=false</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.authenticate=false</jvmFlag>
                            <jvmFlag>-Dcom.sun.management.jmxremote.local.only=false</jvmFlag>
                        </jvmFlags>
                    </container>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <compilerArgs>
                        <arg>-parameters</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <argLine>${globalJvmArgs} -Dmicronaut.environments=standalone,TEST</argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.1.7.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <encoding.source>UTF-8</encoding.source>
                                <encoding.reporting>UTF-8</encoding.reporting>
                                <java.source>${maven.compiler.source}</java.source>
                                <java.target>${maven.compiler.target}</java.target>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:3.9.1:exe:${os.detected.classifier}</protocArtifact>
                </configuration>
            </plugin>
            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.5</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <format>properties</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.micronaut</groupId>
                <artifactId>micronaut-bom</artifactId>
                <version>${micronaut.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- FIXME change back to protobuf-java-lite when supported by plugin -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.9.1</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>3.12.2</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-kubernetes</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.kubernetes</groupId>
            <artifactId>micronaut-kubernetes-discovery-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>artemis-server</artifactId>
            <version>2.9.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.9</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.configuration</groupId>
            <artifactId>micronaut-jdbc-hikari</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.configuration</groupId>
            <artifactId>micronaut-micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-management</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-spring</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.6</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
