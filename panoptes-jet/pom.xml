<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.slaq.slaqworx</groupId>
    <artifactId>panoptes</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>panoptes-jet</artifactId>

  <name>panoptes-jet</name>

  <properties>
    <exec.mainClass>org.slaq.slaqworx.panoptes.pipeline.PanoptesApp</exec.mainClass>
    <globalJvmArgs>-XX:+UseG1GC -XX:+UseStringDeduplication
      -XX:MaxGCPauseMillis=5000
      -XX:+DisableExplicitGC --add-modules java.se
      --add-exports
      java.base/jdk.internal.ref=ALL-UNNAMED
      --add-opens
      java.base/java.lang=ALL-UNNAMED
      --add-opens java.base/java.nio=ALL-UNNAMED
      --add-opens
      java.base/sun.nio.ch=ALL-UNNAMED
      --add-opens
      java.management/sun.management=ALL-UNNAMED
      --add-opens
      jdk.management/com.sun.management.internal=ALL-UNNAMED
      -Xms2560m -Xmx2560m
    </globalJvmArgs>
    <jet.version>4.6-SNAPSHOT</jet.version>
  </properties>

  <build>
    <plugins>
      <!-- create a Docker image for the application -->
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jib-amd64</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <from>
                <!-- :16.0.2 -->
                <image>
                  bellsoft/liberica-openjdk-alpine-musl@sha256:ce30e72bdc70f2e81e2486a3cd0c19d5e654f88f11fd38b56acff90872de8ddd
                </image>
              </from>
              <to>
                <image>uberkube01.slaq.org:5000/slaqworx/panoptes-jet:amd64</image>
              </to>
            </configuration>
          </execution>
          <execution>
            <id>jib-arm64</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
            <configuration>
              <from>
                <!-- 16.0.2 -->
                <image>
                  bellsoft/liberica-openjdk-alpine-musl@sha256:283e9ab190f82dadf69527c0ab1529a75e1b5c09e188fcb809bca526c8d244ed
                </image>
                <!-- :java11-21.0.0.2:arm64 -->
                <!-- ghcr.io/graalvm/graalvm-ce@sha256:f58a5d4056f46a47b54defd38187a4d6fd16e7c15ba6f10de5fdc1e240a27001 -->
                <!-- :20.2.0-java11-arm64 -->
                <!-- <image>oracle/graalvm-ce@sha256:494222b828e6096bd00b16b9626b54665546fc5b60a8080c99be8d29af829638</image> -->
                <!-- :11.0.7-aarch64 -->
                <!-- <image>bellsoft/liberica-openjdk-alpine@sha256:c03fc99110c1e1f89eef77a81ecb470d8ea6d636aa2ff68a2cfbe40e12412d6c</image> -->
                <!-- :14.0.1-8-aarch64 -->
                <!-- <image>bellsoft/liberica-openjdk-alpine@sha256:70fcbb909ade5160c7d26cf798ee1e3af2d2d1bb4cde25aaaa4ff4b9d4f196c0</image> -->
              </from>
              <to>
                <image>uberkube01.slaq.org:5000/slaqworx/panoptes-jet:arm64</image>
              </to>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <allowInsecureRegistries>true</allowInsecureRegistries>
          <container>
            <!-- TODO figure out a way to DRY the global JVM flags -->
            <jvmFlags>
              <jvmFlag>-XX:+UseG1GC</jvmFlag>
              <jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
              <jvmFlag>-XX:MaxGCPauseMillis=5000</jvmFlag>
              <jvmFlag>-XX:+DisableExplicitGC</jvmFlag>
              <jvmFlag>--add-modules</jvmFlag>
              <jvmFlag>java.se</jvmFlag>
              <jvmFlag>--add-exports</jvmFlag>
              <jvmFlag>java.base/jdk.internal.ref=ALL-UNNAMED</jvmFlag>
              <jvmFlag>--add-opens</jvmFlag>
              <jvmFlag>java.base/java.lang=ALL-UNNAMED</jvmFlag>
              <jvmFlag>--add-opens</jvmFlag>
              <jvmFlag>java.base/java.nio=ALL-UNNAMED</jvmFlag>
              <jvmFlag>--add-opens</jvmFlag>
              <jvmFlag>java.base/sun.nio.ch=ALL-UNNAMED</jvmFlag>
              <jvmFlag>--add-opens</jvmFlag>
              <jvmFlag>java.management/sun.management=ALL-UNNAMED</jvmFlag>
              <jvmFlag>--add-opens</jvmFlag>
              <jvmFlag>jdk.management/com.sun.management.internal=ALL-UNNAMED</jvmFlag>
              <jvmFlag>-Xms2560m</jvmFlag>
              <jvmFlag>-Xmx2560m</jvmFlag>
              <jvmFlag>-Dmicronaut.environments=offline</jvmFlag>

              <jvmFlag>-noverify</jvmFlag>
              <jvmFlag>-Dcom.sun.management.jmxremote.rmi.port=8000</jvmFlag>
              <jvmFlag>-Dcom.sun.management.jmxremote=true</jvmFlag>
              <jvmFlag>-Dcom.sun.management.jmxremote.port=8000</jvmFlag>
              <jvmFlag>-Dcom.sun.management.jmxremote.ssl=false</jvmFlag>
              <jvmFlag>-Dcom.sun.management.jmxremote.authenticate=false</jvmFlag>
              <jvmFlag>-Dcom.sun.management.jmxremote.local.only=false</jvmFlag>
            </jvmFlags>
          </container>
        </configuration>
      </plugin>
      <!-- enable Micronaut-related Maven actions -->
      <plugin>
        <groupId>io.micronaut.build</groupId>
        <artifactId>micronaut-maven-plugin</artifactId>
      </plugin>
      <!-- set the desired environment when running unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>${globalJvmArgs}</argLine>
        </configuration>
      </plugin>
      <!-- produce build-info to include in the application package -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
            <configuration>
              <additionalProperties>
                <encoding.source>UTF-8</encoding.source>
                <encoding.reporting>UTF-8</encoding.reporting>
                <java.source>${maven.compiler.source}</java.source>
                <java.target>${maven.compiler.target}</java.target>
              </additionalProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- produce git-info to include in the application package -->
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
          <prefix>git</prefix>
          <verbose>false</verbose>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
          </generateGitPropertiesFilename>
          <format>properties</format>
          <gitDescribe>
            <skip>false</skip>
            <always>false</always>
            <dirty>-dirty</dirty>
          </gitDescribe>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>org.slaq.slaqworx</groupId>
      <artifactId>panoptes-core</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <!-- Jet includes a shaded Hazelcast, so exclude it -->
        <exclusion>
          <artifactId>hazelcast</artifactId>
          <groupId>com.hazelcast</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.hazelcast.jet</groupId>
      <artifactId>hazelcast-jet</artifactId>
      <version>${jet.version}</version>
    </dependency>
    <dependency>
      <groupId>com.hazelcast.jet</groupId>
      <artifactId>hazelcast-jet-kafka</artifactId>
      <version>${jet.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slaq.slaqworx</groupId>
      <artifactId>panoptes-core-test</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
