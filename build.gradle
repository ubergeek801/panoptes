plugins {
    id 'java'
    id 'com.google.cloud.tools.jib' version '1.4.0'
    id 'com.google.protobuf' version '0.8.10'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

group = 'org.slaq'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '11'

def globalJvmArgs = ['-XX:+UseG1GC', '-XX:+UseStringDeduplication', '-XX:MaxGCPauseMillis=5000',
        '--add-modules', 'java.se', '--add-exports', 'java.base/jdk.internal.ref=ALL-UNNAMED',
        '--add-opens', 'java.base/java.lang=ALL-UNNAMED',
        '--add-opens', 'java.base/java.nio=ALL-UNNAMED',
        '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
        '--add-opens', 'java.management/sun.management=ALL-UNNAMED',
        '--add-opens', 'jdk.management/com.sun.management.internal=ALL-UNNAMED']
// note that -Djava.rmi.server.hostname=xxx is set in the container spec so environment variable
// expansion actually works
def k8sJvmArgs = ['-Xmx2560m', '-Dhazelcast.jmx=true', '-noverify', '-XX:TieredStopAtLevel=1',
        '-Djava.util.concurrent.ForkJoinPool.common.parallelism=6',
        '-Dcom.sun.management.jmxremote.rmi.port=8000', '-Dcom.sun.management.jmxremote=true',
        '-Dcom.sun.management.jmxremote.port=8000', '-Dcom.sun.management.jmxremote.ssl=false',
        '-Dcom.sun.management.jmxremote.authenticate=false',
        '-Dcom.sun.management.jmxremote.local.only=false']
k8sJvmArgs.addAll(globalJvmArgs) 

repositories {
    mavenCentral()
}
   
ext {
    set('vaadinVersion', '13.0.11')
}

dependencies {
    implementation 'ch.qos.logback:logback-classic'
    implementation 'com.google.protobuf:protobuf-javalite:3.9.0'
    implementation 'com.hazelcast:hazelcast:3.12.2'
    implementation 'com.hazelcast:hazelcast-kubernetes:1.5.1'
    implementation 'com.hazelcast:hazelcast-spring:3.12.2'
    implementation 'com.vaadin:vaadin-spring-boot-starter'
    implementation 'io.hawt:hawtio-springboot:2.7.0'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.codehaus.groovy:groovy'
    implementation 'org.postgresql:postgresql:42.2.6'
    implementation 'org.springframework.boot:spring-boot-starter-activemq'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }
}

protobuf {
    protoc {
        // the artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.9.0'
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

test {
    jvmArgs = globalJvmArgs
}

bootRun {
    jvmArgs = globalJvmArgs
}

jib {
    allowInsecureRegistries = true

    from {
        image = 'bellsoft/liberica-openjdk-alpine:12.0.2-aarch64'
    }

    to {
        image = 'ubergeek801/slaqworx'
    }

    container {
        jvmFlags = k8sJvmArgs
    }
}
